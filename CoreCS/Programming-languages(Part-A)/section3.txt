一、介绍及术语
本部分主要着重与“第一类函数”及“函数闭包”，这里“第一类函数”我们指的是函数可以被计算、传递、存储等就像其他值一样。
函数闭包就是指函数使用定义在他们外部的一些变量，折让第一类函数非常强大。
高阶函数指那些调用或者返回函数的函数。
函数式编程：
1. 基本或完全不使用可变数据；2.使用函数作为值，这就是这部分内容要讲的
3. 编程风格鼓励递归，或者数据结构递归；4.更接近传统函数的定义语法；5.非面向对象 
二、函数作为参数

三、多态类型及函数作为参数
四、匿名函数
fn y => y*3
五、不必要的函数包装
六、Map 和 Filter 遍历过滤？
七、返回函数
八、不仅只为了数字和列表
九、词法作用域
函数在定义函数的环境中被求值，而不是在调用的环境中求值
词法作用域：使用函数在定义时候的环境, 一组环境嵌套
动态作用域：Dynamic scope,使用调用时候的环境， 一个环境各种绑定
十、环境与闭包
十一、包括高阶函数的一些样例
十二、为什么是词法作用域
十三、像Filter一样传递闭包给迭代器
十四、折叠以及更多的闭包样例
十五、另一个闭包的风格：组合函数
十六、另一个闭包的风格：柯里化以及局部调用

十七、值的限制
十八、通过ML的引用突变
十九、另一个闭包的风格：回调
二十、另一个闭包的风格：抽象数据类型
二十一、其他语言中的闭包
二十二、使用对象和接口的Java闭包
二十三、使用显示环境的C闭包


